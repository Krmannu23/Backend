# Generated by Django 4.2.7 on 2024-02-26 16:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addressId', models.UUIDField(primary_key=True, serialize=False)),
                ('adressLine1', models.CharField(max_length=30)),
                ('addressLine2', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('pincode', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('country', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='BasicDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateOfBirth', models.DateField()),
                ('age', models.CharField(max_length=30)),
                ('gender', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('collegeId', models.UUIDField(primary_key=True, serialize=False)),
                ('insertDate', models.DateTimeField()),
                ('seamster', models.CharField(choices=[('SEM1', 'SEMSTER 1'), ('SEM2', 'SEMSTER 2'), ('SEM3', 'SEMSTER 3'), ('SEM4', 'SEMSTER 4'), ('SEM5', 'SEMSTER 5'), ('SEM6', 'SEMSTER 6'), ('SEM7', 'SEMSTER 7'), ('SEM8', 'SEMSTER 8')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='CollegeDetails',
            fields=[
                ('collegeName', models.CharField(max_length=30)),
                ('universityName', models.CharField(max_length=30)),
                ('dateOfEnrollment', models.CharField(max_length=30)),
                ('collegeRollNo', models.PositiveIntegerField(error_messages={'message': 'College roll number cannot be empty'}, primary_key=True, serialize=False)),
                ('insertDate', models.DateTimeField()),
                ('yearOfPassing', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titles', models.CharField(choices=[('M01', 'Mrs'), ('M02', 'Miss'), ('M03', 'Mr'), ('D01', 'Dr')], max_length=30)),
                ('firstName', models.CharField(max_length=30)),
                ('middleName', models.CharField(max_length=30)),
                ('lastName', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='OtherDetails',
            fields=[
                ('idNumber', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('contactNumber', models.PositiveIntegerField()),
                ('emailId', models.EmailField(max_length=254)),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.address')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subjectId', models.UUIDField(primary_key=True, serialize=False)),
                ('subjectName', models.CharField(choices=[('MA01', 'MATHS'), ('PH01', 'PHYSCIS'), ('ENG01', 'ENGLISH'), ('SC01', 'SCIENCE'), ('HI01', 'HINDI')], max_length=30)),
                ('pointsOrMarks', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('summaryId', models.UUIDField(primary_key=True, serialize=False)),
                ('matricPercentage', models.FloatField()),
                ('interPercentage', models.FloatField()),
                ('graduationPercentage', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='TenSchoolingDetails',
            fields=[
                ('tenthRollNo', models.PositiveIntegerField(error_messages={'message': 'Matriculation roll number cannot be empty'}, primary_key=True, serialize=False)),
                ('schoolName', models.CharField(max_length=30)),
                ('boardName', models.CharField(max_length=30)),
                ('dateOfEnrollment', models.CharField(max_length=30)),
                ('insertDate', models.DateTimeField()),
                ('yearOfPassing', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='TwelfthSchoolingDetails',
            fields=[
                ('twelfthRollNo', models.PositiveIntegerField(error_messages={'message': 'Inter roll number cannot be empty'}, primary_key=True, serialize=False)),
                ('schoolName', models.CharField(max_length=30)),
                ('boardName', models.CharField(max_length=30)),
                ('dateOfEnrollment', models.CharField(max_length=30)),
                ('insertDate', models.DateTimeField()),
                ('yearOfPassing', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Twelfth',
            fields=[
                ('twelfthId', models.UUIDField(primary_key=True, serialize=False)),
                ('insertDate', models.DateTimeField()),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Application.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Tenth',
            fields=[
                ('tenId', models.UUIDField(primary_key=True, serialize=False)),
                ('insertDate', models.DateTimeField()),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Application.subject')),
            ],
        ),
        migrations.CreateModel(
            name='ParentDetails',
            fields=[
                ('parentId', models.UUIDField(primary_key=True, serialize=False)),
                ('relationship', models.CharField(max_length=30)),
                ('otherDetails', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.otherdetails')),
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.name')),
            ],
        ),
        migrations.CreateModel(
            name='FullApi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basicDetails', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.basicdetails')),
                ('college', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.college')),
                ('collegeDetails', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.collegedetails')),
                ('studentSummary', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.summary')),
                ('tenth', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.tenth')),
                ('tenthSchoolingDetails', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.tenschoolingdetails')),
                ('twelfth', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.twelfth')),
                ('twelfthSchoolingDetails', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.twelfthschoolingdetails')),
            ],
        ),
        migrations.AddField(
            model_name='college',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Application.subject'),
        ),
        migrations.AddField(
            model_name='basicdetails',
            name='name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.name'),
        ),
        migrations.AddField(
            model_name='basicdetails',
            name='otherDetails',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.otherdetails'),
        ),
        migrations.AddField(
            model_name='basicdetails',
            name='parentInfo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Application.parentdetails'),
        ),
        migrations.AddField(
            model_name='basicdetails',
            name='userId',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
